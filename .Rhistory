n
lag
a=seq(1,10)
a[-1]
a[0]
a[-c(1,2)]
spline0=function(x,y,pts,mtd){
res=NA
#check if pts valid
if(pts<0){res='invalid pts'}
else{
n=length(x)
nn=1+(n-1)*(pts+1)
xx=seq(1,nn)
yy=rep(0,nn)
yy_l1=c(yy[-1],yy[nn])
yy_l2=c(yy[-c(1,2)],yy[c(nn-1,nn)])
res=
#list(x=xx,y=yy)
list(xx,yy,yy_l1,yy_l2)
}
}
spline0(seq(1,23),rnorm(23,0,1),2)
foo=spline0(seq(1,23),rnorm(23,0,1),2)
#outputs: extended x, y vectors with length = tot_pts
spline0=function(x,y,pts,mtd){
res=NA
#check if pts valid
if(pts < 0 |
length(x) != length(y) |
length(x) < 3){res='invalid inputs'}
else{
n=length(x)
nn=1+(n-1)*(pts+1)
xx=seq(1,nn)
yy=rep(0,nn)
y_l1=c(y[-1],y[n])
y_l2=c(y[-c(1,2)],y[c(n,n)])
res=
#list(x=xx,y=yy)
list(xx,yy,y_l1,y_l2)
}
}
foo=spline0(seq(1,23),rnorm(23,0,1),2)
foo[1]
foo[2]
foo[3]
foo[4]
#outputs: extended x, y vectors with length = tot_pts
spline0=function(x,y,pts,mtd){
res=NA
#check if pts valid
if(pts < 0 |
length(x) != length(y) |
length(x) < 3){res='invalid inputs'}
else{
n=length(x)
nn=1+(n-1)*(pts+1)
xx=seq(1,nn)
yy=rep(0,nn)
y_l1=c(y[-1],y[n])
y_l2=c(y[-c(1,2)],y[c(n,n)])
res=
#list(x=xx,y=yy)
list(xx,yy,y_l1,y_l2)
}
}
foo=spline0(seq(1,23),rnorm(23,0,1),2)
foo[1]
foo[2]
foo[3]
foo[4]
set.seed(123)
inp=rnorm(23,0,1)
foo=spline0(seq(1,23),inp,2)
foo[1]
inp
foo[2]
foo[3]
foo[4]
#outputs: extended x, y vectors with length = tot_pts
spline0=function(x,y,pts,mtd){
res=NA
#check if pts valid
if(pts < 0 |
length(x) != length(y) |
length(x) < 3){res='invalid inputs'}
else{
#make outputs,  leading y vectors, previous y vectors
n=length(x)
nn=1+(n-1)*(pts+1)
xx=seq(1,nn)
yy=rep(0,nn)
y_l1=c(y[-1],y[n])
y_l2=c(y[-c(1,2)],y[c(n,n)])
y_p1=c(c(y[1],y[-n]))
res=
#list(x=xx,y=yy)
data.frame(xx,yy,y_l1,y_l2)
}
}
set.seed(123)
a=rnorm(23,0,1)
b=spline0(seq(1,23),inp,2)
a
View(b)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
c(T,T) & c(F,T)
c(T,T) & c(F,T) | F
c(T,T) & c(F,T) | c(F,F)
c(T,T) & c(F,T) | c(T,F)
c(T,T) & c(F,T) | c(T,F)
c(T,T) & c(F,T) | c(T,F)
c(T,T) & c(F,T) | c(F,F)
c(T,T) & c(F,T) | c(T,T)
c(T,F) & c(F,T) | c(T,T)
c(T,F) & c(F,T) | c(T,F)
T & F | F
T & F | T
T & F | F
res=
#list(x=xx,y=yy)
#data.frame(xx,yy)
data.frame(y,y_n1,y_n2,y_p1)
spline0=function(x,y,pts,mtd){
res=NA
#check if pts valid
if(pts < 0 |
length(x) != length(y) |
length(x) < 3){res='invalid inputs'}
else{
#make outputs,  leading y vectors, previous y vectors, derivative vectors
n=length(x)
nn=1+(n-1)*(pts+1)
xx=seq(1,nn)
yy=rep(0,nn)
y_n1=c(y[-1],y[n])
y_n2=c(y[-c(1,2)],y[c(n,n)])
y_p1=c(c(y[1],y[-n]))
y_d1=rep(0,n)
y_d2=rep(0,n)
#local maximum, minimum, plateau
(y <= y_p1 & y <= y_n1) | (y >= y_p1 & y >= y_n1)
res=
#list(x=xx,y=yy)
#data.frame(xx,yy)
data.frame(y,y_n1,y_n2,y_p1)
}
}
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
rep
sample
seq
seq(c(1,2),c(10,11),1)
vec <- c(2,4,6,9,10)
c(rbind(vec[1], vec[-1]))
vec[-1]
rbind(vec[1], vec[-1])
cbind(vec[1], vec[-1])
c(cbind(vec[1], vec[-1]))
getAnywhere("rep")
inspect
get("rep")
seq
getAnywhere("seq")
getMethods(seq)
getMethods("seq")
getMethod("seq")
getMethod(seq)
getMethods(seq)
getMethods("seq")
seq
seq_along(along.with = c(1,4))
seq_along(along.with = c(1,19))
seq_along(along.with = c(1,1,2,3,34,4,5))
rep(c(2,3),each=3)
rep
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
source('D:/Dropbox/R projects/R_spline/spline0.R', echo=TRUE)
